<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Visualization on Chris Albon</title>
    <link>https://chrisalbon.com/tags/data-visualization/</link>
    <description>Recent content in Data Visualization on Chris Albon</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 20 Dec 2017 11:53:49 -0700</lastBuildDate>
    
	<atom:link href="https://chrisalbon.com/tags/data-visualization/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Back To Back Bar Plot In MatPlotLib</title>
      <link>https://chrisalbon.com/python/matplotlib_back_to_back_bar_plot/</link>
      <pubDate>Wed, 20 Dec 2017 11:53:49 -0700</pubDate>
      
      <guid>https://chrisalbon.com/python/matplotlib_back_to_back_bar_plot/</guid>
      <description>Preliminaries %matplotlib inline import pandas as pd import matplotlib.pyplot as plt import numpy as np Create dataframe raw_data = {&amp;#39;first_name&amp;#39;: [&amp;#39;Jason&amp;#39;, &amp;#39;Molly&amp;#39;, &amp;#39;Tina&amp;#39;, &amp;#39;Jake&amp;#39;, &amp;#39;Amy&amp;#39;], &amp;#39;pre_score&amp;#39;: [4, 24, 31, 2, 3], &amp;#39;mid_score&amp;#39;: [25, 94, 57, 62, 70], &amp;#39;post_score&amp;#39;: [5, 43, 23, 23, 51]} df = pd.DataFrame(raw_data, columns = [&amp;#39;first_name&amp;#39;, &amp;#39;pre_score&amp;#39;, &amp;#39;mid_score&amp;#39;, &amp;#39;post_score&amp;#39;]) df    first_name pre_score mid_score post_score     0 Jason 4 25 5   1 Molly 24 94 43   2 Tina 31 57 23   3 Jake 2 62 23   4 Amy 3 70 51     Make plot # input data, specifically the second and  # third rows, skipping the first column x1 = df.</description>
    </item>
    
    <item>
      <title>Bar Plot In MatPlotLib</title>
      <link>https://chrisalbon.com/python/matplotlib_bar_plot/</link>
      <pubDate>Wed, 20 Dec 2017 11:53:49 -0700</pubDate>
      
      <guid>https://chrisalbon.com/python/matplotlib_bar_plot/</guid>
      <description>Preliminaries %matplotlib inline import pandas as pd import matplotlib.pyplot as plt import numpy as np Create dataframe raw_data = {&amp;#39;first_name&amp;#39;: [&amp;#39;Jason&amp;#39;, &amp;#39;Molly&amp;#39;, &amp;#39;Tina&amp;#39;, &amp;#39;Jake&amp;#39;, &amp;#39;Amy&amp;#39;], &amp;#39;pre_score&amp;#39;: [4, 24, 31, 2, 3], &amp;#39;mid_score&amp;#39;: [25, 94, 57, 62, 70], &amp;#39;post_score&amp;#39;: [5, 43, 23, 23, 51]} df = pd.DataFrame(raw_data, columns = [&amp;#39;first_name&amp;#39;, &amp;#39;pre_score&amp;#39;, &amp;#39;mid_score&amp;#39;, &amp;#39;post_score&amp;#39;]) df    first_name pre_score mid_score post_score     0 Jason 4 25 5   1 Molly 24 94 43   2 Tina 31 57 23   3 Jake 2 62 23   4 Amy 3 70 51     Make plot # Create a list of the mean scores for each variable mean_values = [df[&amp;#39;pre_score&amp;#39;].</description>
    </item>
    
    <item>
      <title>Color Palettes in Seaborn</title>
      <link>https://chrisalbon.com/python/seaborn_color_palettes/</link>
      <pubDate>Wed, 20 Dec 2017 11:53:49 -0700</pubDate>
      
      <guid>https://chrisalbon.com/python/seaborn_color_palettes/</guid>
      <description>Preliminaries import pandas as pd %matplotlib inline import matplotlib.pyplot as plt import seaborn as snsdata = {&amp;#39;date&amp;#39;: [&amp;#39;2014-05-01 18:47:05.069722&amp;#39;, &amp;#39;2014-05-01 18:47:05.119994&amp;#39;, &amp;#39;2014-05-02 18:47:05.178768&amp;#39;, &amp;#39;2014-05-02 18:47:05.230071&amp;#39;, &amp;#39;2014-05-02 18:47:05.230071&amp;#39;, &amp;#39;2014-05-02 18:47:05.280592&amp;#39;, &amp;#39;2014-05-03 18:47:05.332662&amp;#39;, &amp;#39;2014-05-03 18:47:05.385109&amp;#39;, &amp;#39;2014-05-04 18:47:05.436523&amp;#39;, &amp;#39;2014-05-04 18:47:05.486877&amp;#39;], &amp;#39;deaths_regiment_1&amp;#39;: [34, 43, 14, 15, 15, 14, 31, 25, 62, 41], &amp;#39;deaths_regiment_2&amp;#39;: [52, 66, 78, 15, 15, 5, 25, 25, 86, 1], &amp;#39;deaths_regiment_3&amp;#39;: [13, 73, 82, 58, 52, 87, 26, 5, 56, 75], &amp;#39;deaths_regiment_4&amp;#39;: [44, 75, 26, 15, 15, 14, 54, 25, 24, 72], &amp;#39;deaths_regiment_5&amp;#39;: [25, 24, 25, 15, 57, 68, 21, 27, 62, 5], &amp;#39;deaths_regiment_6&amp;#39;: [84, 84, 26, 15, 15, 14, 26, 25, 62, 24], &amp;#39;deaths_regiment_7&amp;#39;: [46, 57, 26, 15, 15, 14, 26, 25, 62, 41]} df = pd.</description>
    </item>
    
    <item>
      <title>Creating A Time Series Plot With Seaborn And pandas</title>
      <link>https://chrisalbon.com/python/seaborn_pandas_timeseries_plot/</link>
      <pubDate>Wed, 20 Dec 2017 11:53:49 -0700</pubDate>
      
      <guid>https://chrisalbon.com/python/seaborn_pandas_timeseries_plot/</guid>
      <description>Preliminaries import pandas as pd %matplotlib inline import matplotlib.pyplot as plt import seaborn as snsdata = {&amp;#39;date&amp;#39;: [&amp;#39;2014-05-01 18:47:05.069722&amp;#39;, &amp;#39;2014-05-01 18:47:05.119994&amp;#39;, &amp;#39;2014-05-02 18:47:05.178768&amp;#39;, &amp;#39;2014-05-02 18:47:05.230071&amp;#39;, &amp;#39;2014-05-02 18:47:05.230071&amp;#39;, &amp;#39;2014-05-02 18:47:05.280592&amp;#39;, &amp;#39;2014-05-03 18:47:05.332662&amp;#39;, &amp;#39;2014-05-03 18:47:05.385109&amp;#39;, &amp;#39;2014-05-04 18:47:05.436523&amp;#39;, &amp;#39;2014-05-04 18:47:05.486877&amp;#39;], &amp;#39;deaths_regiment_1&amp;#39;: [34, 43, 14, 15, 15, 14, 31, 25, 62, 41], &amp;#39;deaths_regiment_2&amp;#39;: [52, 66, 78, 15, 15, 5, 25, 25, 86, 1], &amp;#39;deaths_regiment_3&amp;#39;: [13, 73, 82, 58, 52, 87, 26, 5, 56, 75], &amp;#39;deaths_regiment_4&amp;#39;: [44, 75, 26, 15, 15, 14, 54, 25, 24, 72], &amp;#39;deaths_regiment_5&amp;#39;: [25, 24, 25, 15, 57, 68, 21, 27, 62, 5], &amp;#39;deaths_regiment_6&amp;#39;: [84, 84, 26, 15, 15, 14, 26, 25, 62, 24], &amp;#39;deaths_regiment_7&amp;#39;: [46, 57, 26, 15, 15, 14, 26, 25, 62, 41]} df = pd.</description>
    </item>
    
    <item>
      <title>Creating Scatterplots With Seaborn</title>
      <link>https://chrisalbon.com/python/seaborn_scatterplot/</link>
      <pubDate>Wed, 20 Dec 2017 11:53:49 -0700</pubDate>
      
      <guid>https://chrisalbon.com/python/seaborn_scatterplot/</guid>
      <description>Preliminaries import pandas as pd %matplotlib inline import random import matplotlib.pyplot as plt import seaborn as sns Create data # Create empty dataframe df = pd.DataFrame() # Add columns df[&amp;#39;x&amp;#39;] = random.sample(range(1, 1000), 5) df[&amp;#39;y&amp;#39;] = random.sample(range(1, 1000), 5) df[&amp;#39;z&amp;#39;] = [1,0,0,1,0] df[&amp;#39;k&amp;#39;] = [&amp;#39;male&amp;#39;,&amp;#39;male&amp;#39;,&amp;#39;male&amp;#39;,&amp;#39;female&amp;#39;,&amp;#39;female&amp;#39;]# View first few rows of data df.head()   .dataframe thead tr:only-child th { text-align: right; } .dataframe thead th { text-align: left; } .</description>
    </item>
    
    <item>
      <title>Group Bar Plot In MatPlotLib</title>
      <link>https://chrisalbon.com/python/matplotlib_grouped_bar_plot/</link>
      <pubDate>Wed, 20 Dec 2017 11:53:49 -0700</pubDate>
      
      <guid>https://chrisalbon.com/python/matplotlib_grouped_bar_plot/</guid>
      <description>Preliminaries %matplotlib inline import pandas as pd import matplotlib.pyplot as plt import numpy as np Create dataframe raw_data = {&amp;#39;first_name&amp;#39;: [&amp;#39;Jason&amp;#39;, &amp;#39;Molly&amp;#39;, &amp;#39;Tina&amp;#39;, &amp;#39;Jake&amp;#39;, &amp;#39;Amy&amp;#39;], &amp;#39;pre_score&amp;#39;: [4, 24, 31, 2, 3], &amp;#39;mid_score&amp;#39;: [25, 94, 57, 62, 70], &amp;#39;post_score&amp;#39;: [5, 43, 23, 23, 51]} df = pd.DataFrame(raw_data, columns = [&amp;#39;first_name&amp;#39;, &amp;#39;pre_score&amp;#39;, &amp;#39;mid_score&amp;#39;, &amp;#39;post_score&amp;#39;]) df   first_name pre_score mid_score post_score     0  Jason  4  25  5   1  Molly  24  94  43   2  Tina  31  57  23   3  Jake  2  62  23   4  Amy  3  70  51     Make plot # Setting the positions and width for the bars pos = list(range(len(df[&amp;#39;pre_score&amp;#39;]))) width = 0.</description>
    </item>
    
    <item>
      <title>Histograms In MatPlotLib</title>
      <link>https://chrisalbon.com/python/matplotlib_histogram/</link>
      <pubDate>Wed, 20 Dec 2017 11:53:49 -0700</pubDate>
      
      <guid>https://chrisalbon.com/python/matplotlib_histogram/</guid>
      <description>Preliminaries %matplotlib inline import pandas as pd import matplotlib.pyplot as plt import numpy as np import math # Set ipython&amp;#39;s max row display pd.set_option(&amp;#39;display.max_row&amp;#39;, 1000) # Set iPython&amp;#39;s max column width to 50 pd.set_option(&amp;#39;display.max_columns&amp;#39;, 50) Create dataframe df = pd.read_csv(&amp;#39;https://www.dropbox.com/s/52cb7kcflr8qm2u/5kings_battles_v1.csv?dl=1&amp;#39;) df.head()   name year battle_number attacker_king defender_king attacker_1 attacker_2 attacker_3 attacker_4 defender_1 defender_2 defender_3 defender_4 attacker_outcome battle_type major_death major_capture attacker_size defender_size attacker_commander defender_commander summer location region note     0  Battle of the Golden Tooth  298  1  Joffrey/Tommen Baratheon  Robb Stark  Lannister  NaN  NaN  NaN  Tully  NaN NaN NaN  win  pitched battle  1  0  15000  4000  Jaime Lannister  Clement Piper, Vance  1  Golden Tooth  The Westerlands  NaN   1  Battle at the Mummer&#39;s Ford  298  2  Joffrey/Tommen Baratheon  Robb Stark  Lannister  NaN  NaN  NaN  Baratheon  NaN NaN NaN  win  ambush  1  0  NaN  120  Gregor Clegane  Beric Dondarrion  1  Mummer&#39;s Ford  The Riverlands  NaN   2  Battle of Riverrun  298  3  Joffrey/Tommen Baratheon  Robb Stark  Lannister  NaN  NaN  NaN  Tully  NaN NaN NaN  win  pitched battle  0  1  15000  10000  Jaime Lannister, Andros Brax  Edmure Tully, Tytos Blackwood  1  Riverrun  The Riverlands  NaN   3  Battle of the Green Fork  298  4  Robb Stark  Joffrey/Tommen Baratheon  Stark  NaN  NaN  NaN  Lannister  NaN NaN NaN  loss  pitched battle  1  1  18000  20000  Roose Bolton, Wylis Manderly, Medger Cerwyn, H.</description>
    </item>
    
    <item>
      <title>Making A Matplotlib Scatterplot From A Pandas Dataframe</title>
      <link>https://chrisalbon.com/python/matplotlib_scatterplot_from_pandas/</link>
      <pubDate>Wed, 20 Dec 2017 11:53:49 -0700</pubDate>
      
      <guid>https://chrisalbon.com/python/matplotlib_scatterplot_from_pandas/</guid>
      <description>import modules %matplotlib inline import pandas as pd import matplotlib.pyplot as plt import numpy as np Create dataframe raw_data = {&amp;#39;first_name&amp;#39;: [&amp;#39;Jason&amp;#39;, &amp;#39;Molly&amp;#39;, &amp;#39;Tina&amp;#39;, &amp;#39;Jake&amp;#39;, &amp;#39;Amy&amp;#39;], &amp;#39;last_name&amp;#39;: [&amp;#39;Miller&amp;#39;, &amp;#39;Jacobson&amp;#39;, &amp;#39;Ali&amp;#39;, &amp;#39;Milner&amp;#39;, &amp;#39;Cooze&amp;#39;], &amp;#39;female&amp;#39;: [0, 1, 1, 0, 1], &amp;#39;age&amp;#39;: [42, 52, 36, 24, 73], &amp;#39;preTestScore&amp;#39;: [4, 24, 31, 2, 3], &amp;#39;postTestScore&amp;#39;: [25, 94, 57, 62, 70]} df = pd.DataFrame(raw_data, columns = [&amp;#39;first_name&amp;#39;, &amp;#39;last_name&amp;#39;, &amp;#39;age&amp;#39;, &amp;#39;female&amp;#39;, &amp;#39;preTestScore&amp;#39;, &amp;#39;postTestScore&amp;#39;]) df   .</description>
    </item>
    
    <item>
      <title>Matplotlib, A Simple Example</title>
      <link>https://chrisalbon.com/python/matplotlib_simple_example/</link>
      <pubDate>Wed, 20 Dec 2017 11:53:49 -0700</pubDate>
      
      <guid>https://chrisalbon.com/python/matplotlib_simple_example/</guid>
      <description> Tell Jupyter to load matplotlib and display all visuals created inline (that is, on this page) %matplotlib inline Import matplotlib&amp;rsquo;s pyplot module import matplotlib.pyplot as pyplot Create a simple plot pyplot.plot([1.6, 2.7]) [&amp;lt;matplotlib.lines.Line2D at 0x10c4e7978&amp;gt;]  </description>
    </item>
    
    <item>
      <title>Pie Chart In MatPlotLib</title>
      <link>https://chrisalbon.com/python/matplotlib_pie_chart/</link>
      <pubDate>Wed, 20 Dec 2017 11:53:49 -0700</pubDate>
      
      <guid>https://chrisalbon.com/python/matplotlib_pie_chart/</guid>
      <description>Preliminaries %matplotlib inline import pandas as pd import matplotlib.pyplot as plt Create dataframe raw_data = {&amp;#39;officer_name&amp;#39;: [&amp;#39;Jason&amp;#39;, &amp;#39;Molly&amp;#39;, &amp;#39;Tina&amp;#39;, &amp;#39;Jake&amp;#39;, &amp;#39;Amy&amp;#39;], &amp;#39;jan_arrests&amp;#39;: [4, 24, 31, 2, 3], &amp;#39;feb_arrests&amp;#39;: [25, 94, 57, 62, 70], &amp;#39;march_arrests&amp;#39;: [5, 43, 23, 23, 51]} df = pd.DataFrame(raw_data, columns = [&amp;#39;officer_name&amp;#39;, &amp;#39;jan_arrests&amp;#39;, &amp;#39;feb_arrests&amp;#39;, &amp;#39;march_arrests&amp;#39;]) df    officer_name jan_arrests feb_arrests march_arrests     0 Jason 4 25 5   1 Molly 24 94 43   2 Tina 31 57 23   3 Jake 2 62 23   4 Amy 3 70 51     # Create a column with the total arrests for each officer df[&amp;#39;total_arrests&amp;#39;] = df[&amp;#39;jan_arrests&amp;#39;] + df[&amp;#39;feb_arrests&amp;#39;] + df[&amp;#39;march_arrests&amp;#39;] df    officer_name jan_arrests feb_arrests march_arrests total_arrests     0 Jason 4 25 5 34   1 Molly 24 94 43 161   2 Tina 31 57 23 111   3 Jake 2 62 23 87   4 Amy 3 70 51 124     Make plot # Create a list of colors (from iWantHue) colors = [&amp;#34;#E13F29&amp;#34;, &amp;#34;#D69A80&amp;#34;, &amp;#34;#D63B59&amp;#34;, &amp;#34;#AE5552&amp;#34;, &amp;#34;#CB5C3B&amp;#34;, &amp;#34;#EB8076&amp;#34;, &amp;#34;#96624E&amp;#34;] # Create a pie chart plt.</description>
    </item>
    
    <item>
      <title>Scatterplot In MatPlotLib</title>
      <link>https://chrisalbon.com/python/matplotlib_simple_scatterplot/</link>
      <pubDate>Wed, 20 Dec 2017 11:53:49 -0700</pubDate>
      
      <guid>https://chrisalbon.com/python/matplotlib_simple_scatterplot/</guid>
      <description>Preliminaries %matplotlib inline import pandas as pd import matplotlib.pyplot as plt import numpy as np # Set ipython&amp;#39;s max row display pd.set_option(&amp;#39;display.max_row&amp;#39;, 1000) # Set iPython&amp;#39;s max column width to 50 pd.set_option(&amp;#39;display.max_columns&amp;#39;, 50) Create dataframe df = pd.read_csv(&amp;#39;https://raw.githubusercontent.com/chrisalbon/war_of_the_five_kings_dataset/master/5kings_battles_v1.csv&amp;#39;) df.head()    name year battle_number attacker_king defender_king attacker_1 attacker_2 attacker_3 attacker_4 defender_1 defender_2 defender_3 defender_4 attacker_outcome battle_type major_death major_capture attacker_size defender_size attacker_commander defender_commander summer location region note     0 Battle of the Golden Tooth 298 1 Joffrey/Tommen Baratheon Robb Stark Lannister NaN NaN NaN Tully NaN NaN NaN win pitched battle 1.</description>
    </item>
    
    <item>
      <title>Set The Color Of A Matplotlib Plot</title>
      <link>https://chrisalbon.com/python/set_the_color_of_a_matplotlib/</link>
      <pubDate>Wed, 20 Dec 2017 11:53:49 -0700</pubDate>
      
      <guid>https://chrisalbon.com/python/set_the_color_of_a_matplotlib/</guid>
      <description>Import numpy and matplotlib.pyplot %matplotlib inline import numpy as np import matplotlib.pyplot as plt Create some simulated data. n = 100 r = 2 * np.random.rand(n) theta = 2 * np.pi * np.random.rand(n) area = 200 * r**2 * np.random.rand(n) colors = theta Create a scatterplot using the a colormap. Full list of colormaps: http://wiki.scipy.org/Cookbook/Matplotlib/Show_colormaps
c = plt.scatter(theta, r, c=colors, s=area, cmap=plt.cm.RdYlGn) c1 = plt.scatter(theta, r, c=colors, s=area, cmap=plt.cm.Blues) c2 = plt.</description>
    </item>
    
    <item>
      <title>Stacked Percentage Bar Plot In MatPlotLib</title>
      <link>https://chrisalbon.com/python/matplotlib_percentage_stacked_bar_plot/</link>
      <pubDate>Wed, 20 Dec 2017 11:53:49 -0700</pubDate>
      
      <guid>https://chrisalbon.com/python/matplotlib_percentage_stacked_bar_plot/</guid>
      <description>Preliminaries %matplotlib inline import pandas as pd import matplotlib.pyplot as plt Create dataframe raw_data = {&amp;#39;first_name&amp;#39;: [&amp;#39;Jason&amp;#39;, &amp;#39;Molly&amp;#39;, &amp;#39;Tina&amp;#39;, &amp;#39;Jake&amp;#39;, &amp;#39;Amy&amp;#39;], &amp;#39;pre_score&amp;#39;: [4, 24, 31, 2, 3], &amp;#39;mid_score&amp;#39;: [25, 94, 57, 62, 70], &amp;#39;post_score&amp;#39;: [5, 43, 23, 23, 51]} df = pd.DataFrame(raw_data, columns = [&amp;#39;first_name&amp;#39;, &amp;#39;pre_score&amp;#39;, &amp;#39;mid_score&amp;#39;, &amp;#39;post_score&amp;#39;]) df    first_name pre_score mid_score post_score     0 Jason 4 25 5   1 Molly 24 94 43   2 Tina 31 57 23   3 Jake 2 62 23   4 Amy 3 70 51     Make plot # Create a figure with a single subplot f, ax = plt.</description>
    </item>
    
  </channel>
</rss>